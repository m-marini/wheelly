---
$schema: https://json-schema.org/draft/2020-12/schema
$id: https://mmarini.org/wheelly/agent-single-nn-schema-0.1
title: Agent
type: object
properties:
  $schema:
    const: https://mmarini.org/wheelly/agent-single-nn-schema-0.1
  class:
    const: org.mmarini.rl.agents.TDAgentSingleNN
  modelPath:
    minLength: 1
  savingIntervalSteps:
    multipleOf: 1
    minimum: 1
  seed:
    multipleOf: 1
    minimum: 1
  rewardAlpha:
    exclusiveMinimum: 0
  trainingAlpha:
    exclusiveMinimum: 0
  lambda:
    minimum: 0
  inputProcess:
    $ref: "#/$defs/InputProcessors"
  network:
    $ref: "#/$defs/Network"
required:
  - $schema
  - class
  - modelPath
  - rewardAlpha
  - trainingAlpha
  - lambda
  - network
$defs:
  InputProcessor:
    anyOf:
      - $ref: "#/$defs/AndProcessor"
      - $ref: "#/$defs/NotProcessor"
      - $ref: "#/$defs/MaskedTilesVectorProcessor"
      - $ref: "#/$defs/TilesProcessor"
      - $ref: "#/$defs/PartitionProcessor"
      - $ref: "#/$defs/FeatureVectorProcessor"
  FeatureVectorProcessor:
    type: object
    properties:
      class:
        const: org.mmarini.rl.processors.FeatureVectorProcessor
      name:
        minLenght: 1
      inputs:
        type: array
        items:
          type: string
    required:
      - class
      - name
      - inputs
  MaskedTilesVectorProcessor:
    type: object
    properties:
      class:
        const: org.mmarini.rl.processors.MaskedTilesVectorProcessor
      name:
        minLenght: 1
      input:
        minLenght: 1
      mask:
        minLenght: 1
      numTiles:
        multipleOf: 1
        minimum: 1
    required:
      - class
      - name
      - input
      - mask
      - numTiles
  TilesProcessor:
    type: object
    properties:
      class:
        const: org.mmarini.rl.processors.TilesProcessor
      name:
        minLenght: 1
      inputs:
        type: array
        items:
          type: object
          properties:
            name:
              minLenght: 1
            numTiles:
              multipleOf: 1
              minimum: 1
          required:
            - name
            - numTiles
    required:
      - class
      - name
      - inputs
  NotProcessor:
    type: object
    properties:
      class:
        const: org.mmarini.rl.processors.NotProcessor
      name:
        minLenght: 1
      input:
        minLenght: 1
    required:
      - class
      - name
      - input
  AndProcessor:
    type: object
    properties:
      class:
        const: org.mmarini.rl.processors.AndProcessor
      name:
        minLenght: 1
      inputs:
        type: array
        items:
          type: string
    required:
      - class
      - name
      - inputs
  PartitionProcessor:
    type: object
    properties:
      class:
        const: org.mmarini.rl.processors.PartitionProcessor
      name:
        minLenght: 1
      inputs:
        type: array
        items:
          type: object
          properties:
            name:
              minLenght: 1
            numTiles:
              multipleOf: 1
              minimum: 1
          required:
            - name
            - numTiles
    required:
      - class
      - name
      - inputs
  InputProcessors:
    type: array
    items:
      $ref: "#/$defs/InputProcessor"
    minItems: 1
  Composer:
    type: object
    properties:
      type:
        enum: [ sum, concat ]
      inputs:
        type: array
        items:
          type: string
    required:
      - type
      - inputs
  Layer:
    anyOf:
      - $ref: "#/$defs/Linear"
      - $ref: "#/$defs/Dense"
      - $ref: "#/$defs/DropOut"
      - $ref: "#/$defs/Softmax"
      - $ref: "#/$defs/Others"
  Others:
    type: object
    properties:
      type:
        enum:
          - relu
          - tanh
    required:
      - type
  Dense:
    type: object
    properties:
      type:
        const: dense
      outputSize:
        multipleOf: 1
        minimum: 1
      maxAbsWeights:
        exclusiveMinimum: 0
      dropOut:
        exclusiveMinimum: 0
        maximum: 1
    required:
      - type
      - outputSize
  DropOut:
    type: object
    properties:
      type:
        const: dropout
      dropOut:
        exclusiveMinimum: 0
        maximum: 1
    required:
      - type
      - dropOut
  Softmax:
    type: object
    properties:
      type:
        const: softmax
      temperature:
        exclusiveMinimum: 0
    required:
      - type
      - temperature
  Linear:
    type: object
    properties:
      type:
        const: linear
      b:
        type: number
      w:
        type: number
    required:
      - type
      - b
      - w
  Layers:
    type: object
    properties:
      input:
        type: string
      inputs:
        $ref: "#/$defs/Composer"
      layers:
        type: array
        items:
          $ref: "#/$defs/Layer"
    required:
      - layers
  Network:
    type: object
    additionalProperties:
      $ref: "#/$defs/Layers"
