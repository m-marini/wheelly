---
version: "0.1"
host: "192.168.1.11"
port: 22
connectionTimeout: 1000
readTimeout: 3000
retryConnectionInterval: 3000
responseTime: 300
motorCommandInterval: 700
scanCommandInterval: 700
dumpFile: dump.dat
robotLogFile: data.log
engine: engines/deepl

engines:
  deepl:
    builder: org.mmarini.wheelly.engines.deepl.RLEngine.fromJson
    avgReward: 0.2
    rewardDecay: 300
    valueDecay: 30
    rewardRange: [ -5, 2 ]
    averageReward: -3.5
    stateEncoder:
      type: SimpleStatus
    actors:
      - type: DiscreteActor
        noValues: 2
        outputRange: [0, 1]
        alpha: 3
        alphaDecay: 100
        preferenceRange: [-2.4, 2.4]
      - type: DiscreteActor
        noValues: 24
        outputRange: [-180, 165]
        alpha: 3
        alphaDecay: 100
        preferenceRange: [-2.4, 2.4]
      - type: DiscreteActor
        noValues: 21
        outputRange: [-1, 1]
        alpha: 3
        alphaDecay: 100
        preferenceRange: [-2.4, 2.4]
      - type: DiscreteActor
        noValues: 9
        outputRange: [-90, 90]
        alpha: 3
        alphaDecay: 10
        preferenceRange: [-2.4, 2.4]
    agentFile: model-simple.zip
    saveFile: model-simple-online.zip
  manual:
    builder: org.mmarini.wheelly.engines.Builders.manual
  # Linux
  #    joystickPort: "Mega World USB Game Controllers"
  # Windows
  #    joystickPort: "USB Game Controllers"
  stop:
    builder: org.mmarini.wheelly.engines.Builders.stop
  sequence:
    builder: org.mmarini.wheelly.engines.Builders.sequence
    targets:
      - [ 0, 0 ]
      - [ 1, 1 ]
      - [ 1, 0 ]
    thresholdDistance: 0.1
  random:
    builder: org.mmarini.wheelly.engines.Builders.randomPath
    maxDistance: 2
  #    center: [0, 0]
  sala:
    builder: org.mmarini.wheelly.engines.Builders.findPath
    targets:
      - [ 2.3, 3 ]
      - [ 2, 0 ]
      - [ 0, 0 ]
    thresholdDistance: 0.1
    safeDistance: 0.3
  lab:
    builder: org.mmarini.wheelly.engines.Builders.findPath
    target: [ 0.8, 0 ]
    thresholdDistance: 0.1
    safeDistance: 0.3
  gotoTest:
    builder: org.mmarini.wheelly.engines.Builders.gotoTest
    target: [ 1, 0 ]
    thresholdDistance: 0.1
    safeDistance: 0.3
  avoid:
    builder: org.mmarini.wheelly.engines.Builders.avoidObstacle
  follow:
    builder: org.mmarini.wheelly.engines.Builders.follow
